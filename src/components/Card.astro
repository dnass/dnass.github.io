---
interface Props {
  title: string;
  publications: string[];
  date: Date;
  image: ImageMetadata;
  alt: string;
  info?: string;
  url: string;
  technologies: string[];
  roles: string[];
  dark?: boolean;
  lazy?: boolean;
}

import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import Chip from '@components/Chip.astro';

const {
  title,
  technologies,
  publications,
  roles,
  image,
  alt,
  info,
  url,
  dark = false,
  lazy = true,
} = Astro.props;

const tags = [...publications, ...technologies, ...roles]
  .map((label) => label.toLowerCase().replace(/[^a-z0-9]/g, '-'))
  .join(' ');
---

<a
  href={url}
  target='_blank'
  class='hocus:border-theme-200 border-theme-500 md:hocus:after:translate-x-24 hocus:after:opacity-80 after:text-theme-200 group relative top-0 col-span-5 flex h-56 flex-col rounded-xl border-4 border-solid transition-all duration-200 will-change-[height] after:absolute after:right-0 after:flex after:h-full after:items-center after:pl-8 after:text-8xl after:opacity-0 after:transition-all after:duration-300 after:ease-out after:content-["➮"] focus-visible:outline-none md:col-span-4 md:col-start-2 md:active:after:!translate-x-28 lg:col-span-3 lg:col-start-2'
  data-tags={tags}
>
  <div class='absolute z-10 h-full overflow-hidden rounded-lg'>
    <Image
      loading={lazy ? 'lazy' : 'eager'}
      src={image}
      alt={alt}
      class='group-hocus:scale-150 group-hocus:blur-2xl group-hocus:contrast-150 h-full object-cover transition-all duration-300 ease-in'
    />
  </div>
  <div
    class:list={[
      'group-hocus:opacity-100 group-hocus:blur-none relative z-10 flex h-full flex-col justify-between gap-4 p-4 opacity-0 blur-xl transition-all delay-100 duration-500 ease-out',
      dark ? 'text-theme-100' : 'text-theme-900',
    ]}
  >
    <div>
      <h3
        class:list={[
          'mb-1 text-sm text-opacity-90',
          dark ? 'text-theme-200' : 'text-theme-800',
        ]}
      >
        {
          publications.map((pub) => (
            <span class="[&:not(:last-of-type)]:after:opacity-50 [&:not(:last-of-type)]:after:content-['／']">
              {pub}
            </span>
          ))
        }
      </h3>
      <h2 class='mb-3 font-serif text-2xl font-bold leading-[0.8] md:text-3xl'>
        {title}
      </h2>
    </div>
    <div class='flex flex-row flex-wrap gap-1'>
      {
        [...technologies.sort(), ...roles.sort()].map((item) => (
          <Chip>{item}</Chip>
        ))
      }
    </div>
  </div>
</a>
